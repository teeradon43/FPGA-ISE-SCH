////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : main.vf
// /___/   /\     Timestamp : 11/03/2020 00:39:24
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/CE/2-1/01076006 Digital System Fundamentals/Lab/Lab7/main.vf" -w "D:/CE/2-1/01076006 Digital System Fundamentals/Lab/Lab7/main.sch"
//Design Name: main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_main(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale  100 ps / 10 ps

module OR6_HXILINX_main (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_main(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module jkCounter0to9_MUSER_main(CLK_IN, 
                                CLR, 
                                A, 
                                B, 
                                C, 
                                D);

    input CLK_IN;
    input CLR;
   output A;
   output B;
   output C;
   output D;
   
   wire XLXN_8;
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_50;
   wire XLXN_52;
   wire A_DUMMY;
   wire B_DUMMY;
   wire C_DUMMY;
   wire D_DUMMY;
   
   assign A = A_DUMMY;
   assign B = B_DUMMY;
   assign C = C_DUMMY;
   assign D = D_DUMMY;
   (* HU_SET = "XLXI_1_4" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(CLK_IN), 
                             .CLR(CLR), 
                             .J(XLXN_8), 
                             .K(XLXN_8), 
                             .Q(A_DUMMY));
   (* HU_SET = "XLXI_2_5" *) 
   FJKC_HXILINX_main  XLXI_2 (.C(CLK_IN), 
                             .CLR(CLR), 
                             .J(XLXN_15), 
                             .K(XLXN_15), 
                             .Q(B_DUMMY));
   (* HU_SET = "XLXI_3_6" *) 
   FJKC_HXILINX_main  XLXI_3 (.C(CLK_IN), 
                             .CLR(CLR), 
                             .J(XLXN_47), 
                             .K(XLXN_47), 
                             .Q(C_DUMMY));
   (* HU_SET = "XLXI_4_7" *) 
   FJKC_HXILINX_main  XLXI_4 (.C(CLK_IN), 
                             .CLR(CLR), 
                             .J(XLXN_50), 
                             .K(XLXN_52), 
                             .Q(D_DUMMY));
   INV  XLXI_5 (.I(D_DUMMY), 
               .O(XLXN_17));
   VCC  XLXI_7 (.P(XLXN_8));
   AND2  XLXI_8 (.I0(XLXN_17), 
                .I1(A_DUMMY), 
                .O(XLXN_15));
   AND2  XLXI_9 (.I0(B_DUMMY), 
                .I1(A_DUMMY), 
                .O(XLXN_47));
   AND2  XLXI_10 (.I0(B_DUMMY), 
                 .I1(A_DUMMY), 
                 .O(XLXN_48));
   AND2  XLXI_11 (.I0(C_DUMMY), 
                 .I1(XLXN_48), 
                 .O(XLXN_50));
   AND2  XLXI_12 (.I0(A_DUMMY), 
                 .I1(D_DUMMY), 
                 .O(XLXN_52));
endmodule
`timescale 1ns / 1ps

module clkDiv10_MUSER_main(clk_in, 
                           clk_out);

    input clk_in;
   output clk_out;
   
   wire XLXN_2;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_13;
   wire XLXN_16;
   
   jkCounter0to9_MUSER_main  XLXI_1 (.CLK_IN(clk_in), 
                                    .CLR(XLXN_2), 
                                    .A(XLXN_5), 
                                    .B(XLXN_6), 
                                    .C(XLXN_7), 
                                    .D(XLXN_8));
   GND  XLXI_2 (.G(XLXN_2));
   XNOR2  XLXI_3 (.I0(XLXN_6), 
                 .I1(XLXN_5), 
                 .O(XLXN_9));
   XNOR2  XLXI_4 (.I0(XLXN_8), 
                 .I1(XLXN_7), 
                 .O(XLXN_10));
   AND2  XLXI_5 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .O(XLXN_13));
   AND2  XLXI_6 (.I0(clk_in), 
                .I1(XLXN_13), 
                .O(XLXN_16));
   FD_1 #( .INIT(1'b0) ) XLXI_8 (.C(clk_in), 
                .D(XLXN_16), 
                .Q(clk_out));
endmodule
`timescale 1ns / 1ps

module clkDiv2_MUSER_main(clk_in, 
                          clk_out);

    input clk_in;
   output clk_out;
   
   wire XLXN_2;
   wire clk_out_DUMMY;
   
   assign clk_out = clk_out_DUMMY;
   FD #( .INIT(1'b0) ) XLXI_1 (.C(clk_in), 
              .D(XLXN_2), 
              .Q(clk_out_DUMMY));
   INV  XLXI_2 (.I(clk_out_DUMMY), 
               .O(XLXN_2));
endmodule
`timescale 1ns / 1ps

module ClockDivider_MUSER_main(CLK_20MHz, 
                               CLK_1Hz, 
                               CLK_100Hz);

    input CLK_20MHz;
   output CLK_1Hz;
   output CLK_100Hz;
   
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_81;
   wire XLXN_83;
   wire CLK_100Hz_DUMMY;
   
   assign CLK_100Hz = CLK_100Hz_DUMMY;
   clkDiv10_MUSER_main  XLXI_62 (.clk_in(CLK_100Hz_DUMMY), 
                                .clk_out(XLXN_73));
   clkDiv10_MUSER_main  XLXI_63 (.clk_in(XLXN_73), 
                                .clk_out(XLXN_74));
   clkDiv10_MUSER_main  XLXI_64 (.clk_in(XLXN_74), 
                                .clk_out(XLXN_79));
   clkDiv10_MUSER_main  XLXI_65 (.clk_in(XLXN_76), 
                                .clk_out(XLXN_83));
   clkDiv10_MUSER_main  XLXI_66 (.clk_in(XLXN_83), 
                                .clk_out(XLXN_78));
   clkDiv10_MUSER_main  XLXI_67 (.clk_in(CLK_20MHz), 
                                .clk_out(CLK_100Hz_DUMMY));
   clkDiv10_MUSER_main  XLXI_68 (.clk_in(XLXN_75), 
                                .clk_out(XLXN_76));
   clkDiv10_MUSER_main  XLXI_70 (.clk_in(XLXN_79), 
                                .clk_out(XLXN_75));
   clkDiv2_MUSER_main  XLXI_72 (.clk_in(XLXN_81), 
                               .clk_out(CLK_1Hz));
   clkDiv10_MUSER_main  XLXI_73 (.clk_in(XLXN_78), 
                                .clk_out(XLXN_81));
endmodule
`timescale 1ns / 1ps

module twoBitCounter_MUSER_main(CLK_IN, 
                                OUT0, 
                                OUT1);

    input CLK_IN;
   output OUT0;
   output OUT1;
   
   wire XLXN_4;
   wire XLXN_8;
   wire XLXN_11;
   wire OUT0_DUMMY;
   
   assign OUT0 = OUT0_DUMMY;
   (* HU_SET = "XLXI_1_8" *) 
   FTC_HXILINX_main  XLXI_1 (.C(CLK_IN), 
                            .CLR(XLXN_8), 
                            .T(XLXN_11), 
                            .Q(OUT0_DUMMY));
   (* HU_SET = "XLXI_2_9" *) 
   FTC_HXILINX_main  XLXI_2 (.C(XLXN_4), 
                            .CLR(XLXN_8), 
                            .T(XLXN_11), 
                            .Q(OUT1));
   VCC  XLXI_3 (.P(XLXN_11));
   INV  XLXI_4 (.I(OUT0_DUMMY), 
               .O(XLXN_4));
   INV  XLXI_9 (.I(XLXN_11), 
               .O(XLXN_8));
endmodule
`timescale 1ns / 1ps

module demux1to4_MUSER_main(C_IN, 
                            OUT0, 
                            OUT1, 
                            OUT2, 
                            OUT3);

    input C_IN;
   output OUT0;
   output OUT1;
   output OUT2;
   output OUT3;
   
   wire XLXN_2;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_25;
   
   twoBitCounter_MUSER_main  XLXI_1 (.CLK_IN(C_IN), 
                                    .OUT0(XLXN_2), 
                                    .OUT1(XLXN_25));
   INV  XLXI_2 (.I(XLXN_2), 
               .O(XLXN_18));
   INV  XLXI_3 (.I(XLXN_25), 
               .O(XLXN_19));
   NAND2  XLXI_8 (.I0(XLXN_19), 
                 .I1(XLXN_18), 
                 .O(OUT0));
   NAND2  XLXI_9 (.I0(XLXN_19), 
                 .I1(XLXN_2), 
                 .O(OUT1));
   NAND2  XLXI_10 (.I0(XLXN_25), 
                  .I1(XLXN_18), 
                  .O(OUT2));
   NAND2  XLXI_11 (.I0(XLXN_25), 
                  .I1(XLXN_2), 
                  .O(OUT3));
endmodule
`timescale 1ns / 1ps

module bcd4to7g_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           g_seg);

    input A;
    input B;
    input C;
    input D;
   output g_seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   
   AND2B1  XLXI_1 (.I0(C), 
                  .I1(B), 
                  .O(XLXN_1));
   AND2B1  XLXI_2 (.I0(A), 
                  .I1(B), 
                  .O(XLXN_2));
   AND2B1  XLXI_3 (.I0(C), 
                  .I1(D), 
                  .O(XLXN_4));
   AND2  XLXI_4 (.I0(D), 
                .I1(A), 
                .O(XLXN_5));
   AND3B2  XLXI_5 (.I0(D), 
                  .I1(B), 
                  .I2(C), 
                  .O(XLXN_3));
   OR5  XLXI_8 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_3), 
               .I3(XLXN_2), 
               .I4(XLXN_1), 
               .O(g_seg));
endmodule
`timescale 1ns / 1ps

module bcd4to7f_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           f_seg);

    input A;
    input B;
    input C;
    input D;
   output f_seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   
   AND2B2  XLXI_1 (.I0(B), 
                  .I1(A), 
                  .O(XLXN_1));
   AND2B1  XLXI_2 (.I0(A), 
                  .I1(C), 
                  .O(XLXN_3));
   AND2B1  XLXI_3 (.I0(C), 
                  .I1(D), 
                  .O(XLXN_4));
   AND2  XLXI_4 (.I0(D), 
                .I1(B), 
                .O(XLXN_5));
   AND3B2  XLXI_5 (.I0(D), 
                  .I1(B), 
                  .I2(C), 
                  .O(XLXN_2));
   OR5  XLXI_6 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_3), 
               .I3(XLXN_2), 
               .I4(XLXN_1), 
               .O(f_seg));
endmodule
`timescale 1ns / 1ps

module bcd4to7e_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           e_seg);

    input A;
    input B;
    input C;
    input D;
   output e_seg;
   
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   
   AND2  XLXI_1 (.I0(D), 
                .I1(B), 
                .O(XLXN_14));
   AND2  XLXI_2 (.I0(D), 
                .I1(C), 
                .O(XLXN_15));
   AND2B1  XLXI_3 (.I0(A), 
                  .I1(B), 
                  .O(XLXN_13));
   AND2B2  XLXI_4 (.I0(C), 
                  .I1(A), 
                  .O(XLXN_12));
   OR4  XLXI_5 (.I0(XLXN_15), 
               .I1(XLXN_14), 
               .I2(XLXN_13), 
               .I3(XLXN_12), 
               .O(e_seg));
endmodule
`timescale 1ns / 1ps

module bcd4to7d_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           d_seg);

    input A;
    input B;
    input C;
    input D;
   output d_seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   
   AND3B3  XLXI_1 (.I0(D), 
                  .I1(C), 
                  .I2(A), 
                  .O(XLXN_1));
   AND3B1  XLXI_2 (.I0(C), 
                  .I1(B), 
                  .I2(A), 
                  .O(XLXN_2));
   AND3B1  XLXI_3 (.I0(B), 
                  .I1(C), 
                  .I2(A), 
                  .O(XLXN_3));
   AND3B1  XLXI_4 (.I0(A), 
                  .I1(C), 
                  .I2(B), 
                  .O(XLXN_4));
   AND2B1  XLXI_5 (.I0(B), 
                  .I1(D), 
                  .O(XLXN_5));
   OR5  XLXI_6 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_3), 
               .I3(XLXN_2), 
               .I4(XLXN_1), 
               .O(d_seg));
endmodule
`timescale 1ns / 1ps

module bcd4to7c_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           c_seg);

    input A;
    input B;
    input C;
    input D;
   output c_seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   
   AND2B2  XLXI_1 (.I0(D), 
                  .I1(B), 
                  .O(XLXN_1));
   AND2B1  XLXI_2 (.I0(D), 
                  .I1(A), 
                  .O(XLXN_2));
   AND2B1  XLXI_3 (.I0(B), 
                  .I1(A), 
                  .O(XLXN_3));
   AND2B1  XLXI_4 (.I0(D), 
                  .I1(C), 
                  .O(XLXN_4));
   AND2B1  XLXI_5 (.I0(C), 
                  .I1(D), 
                  .O(XLXN_5));
   OR5  XLXI_6 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_3), 
               .I3(XLXN_2), 
               .I4(XLXN_1), 
               .O(c_seg));
endmodule
`timescale 1ns / 1ps

module bcd4to7b_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           b_seg);

    input A;
    input B;
    input C;
    input D;
   output b_seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   
   AND2B2  XLXI_1 (.I0(D), 
                  .I1(C), 
                  .O(XLXN_1));
   AND2B2  XLXI_2 (.I0(C), 
                  .I1(B), 
                  .O(XLXN_3));
   AND2B2  XLXI_3 (.I0(C), 
                  .I1(A), 
                  .O(XLXN_4));
   AND3B3  XLXI_4 (.I0(D), 
                  .I1(B), 
                  .I2(A), 
                  .O(XLXN_2));
   AND3B1  XLXI_5 (.I0(D), 
                  .I1(B), 
                  .I2(A), 
                  .O(XLXN_5));
   AND3B1  XLXI_6 (.I0(B), 
                  .I1(D), 
                  .I2(A), 
                  .O(XLXN_6));
   (* HU_SET = "XLXI_7_10" *) 
   OR6_HXILINX_main  XLXI_7 (.I0(XLXN_6), 
                            .I1(XLXN_5), 
                            .I2(XLXN_4), 
                            .I3(XLXN_3), 
                            .I4(XLXN_2), 
                            .I5(XLXN_1), 
                            .O(b_seg));
endmodule
`timescale 1ns / 1ps

module bcd4to7a_MUSER_main(A, 
                           B, 
                           C, 
                           D, 
                           a_seg);

    input A;
    input B;
    input C;
    input D;
   output a_seg;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   
   AND2B2  XLXI_8 (.I0(C), 
                  .I1(A), 
                  .O(XLXN_1));
   AND2B1  XLXI_10 (.I0(D), 
                   .I1(B), 
                   .O(XLXN_2));
   AND2B1  XLXI_11 (.I0(A), 
                   .I1(D), 
                   .O(XLXN_6));
   AND2  XLXI_12 (.I0(C), 
                 .I1(B), 
                 .O(XLXN_4));
   AND3B1  XLXI_13 (.I0(D), 
                   .I1(C), 
                   .I2(A), 
                   .O(XLXN_3));
   AND3B2  XLXI_14 (.I0(C), 
                   .I1(B), 
                   .I2(D), 
                   .O(XLXN_5));
   (* HU_SET = "XLXI_15_11" *) 
   OR6_HXILINX_main  XLXI_15 (.I0(XLXN_6), 
                             .I1(XLXN_5), 
                             .I2(XLXN_4), 
                             .I3(XLXN_3), 
                             .I4(XLXN_2), 
                             .I5(XLXN_1), 
                             .O(a_seg));
endmodule
`timescale 1ns / 1ps

module bcd_MUSER_main(In_A, 
                      In_B, 
                      In_C, 
                      In_D, 
                      a, 
                      b, 
                      c, 
                      d, 
                      e, 
                      f, 
                      g);

    input In_A;
    input In_B;
    input In_C;
    input In_D;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   
   
   bcd4to7a_MUSER_main  XLXI_10 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .a_seg(a));
   bcd4to7b_MUSER_main  XLXI_11 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .b_seg(b));
   bcd4to7c_MUSER_main  XLXI_12 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .c_seg(c));
   bcd4to7d_MUSER_main  XLXI_13 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .d_seg(d));
   bcd4to7e_MUSER_main  XLXI_14 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .e_seg(e));
   bcd4to7f_MUSER_main  XLXI_15 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .f_seg(f));
   bcd4to7g_MUSER_main  XLXI_16 (.A(In_A), 
                                .B(In_B), 
                                .C(In_C), 
                                .D(In_D), 
                                .g_seg(g));
endmodule
`timescale 1ns / 1ps

module MUX4B2S_MUSER_main(A, 
                          B, 
                          C, 
                          D, 
                          S0, 
                          S1, 
                          Q);

    input A;
    input B;
    input C;
    input D;
    input S0;
    input S1;
   output Q;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_15;
   wire XLXN_16;
   
   AND3  XLXI_1 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .I2(A), 
                .O(XLXN_1));
   AND3  XLXI_2 (.I0(XLXN_16), 
                .I1(S0), 
                .I2(B), 
                .O(XLXN_2));
   AND3  XLXI_3 (.I0(S1), 
                .I1(XLXN_15), 
                .I2(C), 
                .O(XLXN_3));
   AND3  XLXI_4 (.I0(S1), 
                .I1(S0), 
                .I2(D), 
                .O(XLXN_4));
   OR4  XLXI_5 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(Q));
   INV  XLXI_6 (.I(S0), 
               .O(XLXN_15));
   INV  XLXI_7 (.I(S1), 
               .O(XLXN_16));
endmodule
`timescale 1ns / 1ps

module MUX16_4_MUSER_main(A0, 
                          A1, 
                          A2, 
                          A3, 
                          B0, 
                          B1, 
                          B2, 
                          B3, 
                          CLK_IN, 
                          C0, 
                          C1, 
                          C2, 
                          C3, 
                          D0, 
                          D1, 
                          D2, 
                          D3, 
                          Q0, 
                          Q1, 
                          Q2, 
                          Q3);

    input A0;
    input A1;
    input A2;
    input A3;
    input B0;
    input B1;
    input B2;
    input B3;
    input CLK_IN;
    input C0;
    input C1;
    input C2;
    input C3;
    input D0;
    input D1;
    input D2;
    input D3;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   
   wire XLXN_23;
   wire XLXN_24;
   
   twoBitCounter_MUSER_main  XLXI_7 (.CLK_IN(CLK_IN), 
                                    .OUT0(XLXN_23), 
                                    .OUT1(XLXN_24));
   MUX4B2S_MUSER_main  XLXI_21 (.A(A0), 
                               .B(B0), 
                               .C(C0), 
                               .D(D0), 
                               .S0(XLXN_23), 
                               .S1(XLXN_24), 
                               .Q(Q0));
   MUX4B2S_MUSER_main  XLXI_22 (.A(A1), 
                               .B(B1), 
                               .C(C1), 
                               .D(D1), 
                               .S0(XLXN_23), 
                               .S1(XLXN_24), 
                               .Q(Q1));
   MUX4B2S_MUSER_main  XLXI_23 (.A(A2), 
                               .B(B2), 
                               .C(C2), 
                               .D(D2), 
                               .S0(XLXN_23), 
                               .S1(XLXN_24), 
                               .Q(Q2));
   MUX4B2S_MUSER_main  XLXI_24 (.A(A3), 
                               .B(B3), 
                               .C(C3), 
                               .D(D3), 
                               .S0(XLXN_23), 
                               .S1(XLXN_24), 
                               .Q(Q3));
endmodule
`timescale 1ns / 1ps

module stateToggle_MUSER_main(C_IN, 
                              C_OUT);

    input C_IN;
   output C_OUT;
   
   wire XLXN_3;
   wire C_OUT_DUMMY;
   
   assign C_OUT = C_OUT_DUMMY;
   FD #( .INIT(1'b0) ) XLXI_1 (.C(C_IN), 
              .D(XLXN_3), 
              .Q(C_OUT_DUMMY));
   INV  XLXI_2 (.I(C_OUT_DUMMY), 
               .O(XLXN_3));
endmodule
`timescale 1ns / 1ps

module jkCounter0to5_MUSER_main(CLK_IN, 
                                CLR, 
                                A, 
                                B, 
                                C);

    input CLK_IN;
    input CLR;
   output A;
   output B;
   output C;
   
   wire XLXN_6;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_74;
   wire XLXN_75;
   wire A_DUMMY;
   wire B_DUMMY;
   wire C_DUMMY;
   
   assign A = A_DUMMY;
   assign B = B_DUMMY;
   assign C = C_DUMMY;
   (* HU_SET = "XLXI_1_14" *) 
   FJKC_HXILINX_main  XLXI_1 (.C(CLK_IN), 
                             .CLR(CLR), 
                             .J(XLXN_6), 
                             .K(XLXN_6), 
                             .Q(A_DUMMY));
   VCC  XLXI_3 (.P(XLXN_6));
   (* HU_SET = "XLXI_13_13" *) 
   FJKC_HXILINX_main  XLXI_13 (.C(CLK_IN), 
                              .CLR(CLR), 
                              .J(XLXN_68), 
                              .K(XLXN_68), 
                              .Q(B_DUMMY));
   (* HU_SET = "XLXI_14_12" *) 
   FJKC_HXILINX_main  XLXI_14 (.C(CLK_IN), 
                              .CLR(CLR), 
                              .J(XLXN_69), 
                              .K(XLXN_75), 
                              .Q(C_DUMMY));
   AND2  XLXI_15 (.I0(XLXN_74), 
                 .I1(A_DUMMY), 
                 .O(XLXN_68));
   AND2  XLXI_16 (.I0(A_DUMMY), 
                 .I1(C_DUMMY), 
                 .O(XLXN_75));
   AND2  XLXI_17 (.I0(B_DUMMY), 
                 .I1(A_DUMMY), 
                 .O(XLXN_69));
   INV  XLXI_36 (.I(C_DUMMY), 
                .O(XLXN_74));
endmodule
`timescale 1ns / 1ps

module timer_MUSER_main(CLEAR, 
                        CLK_IN, 
                        A0, 
                        A1, 
                        A2, 
                        A3, 
                        B0, 
                        B1, 
                        B2, 
                        B3, 
                        C0, 
                        C1, 
                        C2, 
                        C3, 
                        D0, 
                        D1, 
                        D2, 
                        D3);

    input CLEAR;
    input CLK_IN;
   output A0;
   output A1;
   output A2;
   output A3;
   output B0;
   output B1;
   output B2;
   output B3;
   output C0;
   output C1;
   output C2;
   output C3;
   output D0;
   output D1;
   output D2;
   output D3;
   
   wire XLXN_13;
   wire XLXN_16;
   wire XLXN_32;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_60;
   wire XLXN_61;
   wire A0_DUMMY;
   wire A1_DUMMY;
   wire A2_DUMMY;
   wire A3_DUMMY;
   wire B0_DUMMY;
   wire B1_DUMMY;
   wire B2_DUMMY;
   wire C0_DUMMY;
   wire C1_DUMMY;
   wire C2_DUMMY;
   wire C3_DUMMY;
   
   assign A0 = A0_DUMMY;
   assign A1 = A1_DUMMY;
   assign A2 = A2_DUMMY;
   assign A3 = A3_DUMMY;
   assign B0 = B0_DUMMY;
   assign B1 = B1_DUMMY;
   assign B2 = B2_DUMMY;
   assign C0 = C0_DUMMY;
   assign C1 = C1_DUMMY;
   assign C2 = C2_DUMMY;
   assign C3 = C3_DUMMY;
   jkCounter0to5_MUSER_main  XLXI_1 (.CLK_IN(XLXN_51), 
                                    .CLR(CLEAR), 
                                    .A(B0_DUMMY), 
                                    .B(B1_DUMMY), 
                                    .C(B2_DUMMY));
   jkCounter0to9_MUSER_main  XLXI_2 (.CLK_IN(CLK_IN), 
                                    .CLR(CLEAR), 
                                    .A(A0_DUMMY), 
                                    .B(A1_DUMMY), 
                                    .C(A2_DUMMY), 
                                    .D(A3_DUMMY));
   AND2  XLXI_6 (.I0(XLXN_51), 
                .I1(XLXN_13), 
                .O(XLXN_16));
   FD_1 #( .INIT(1'b0) ) XLXI_16 (.C(CLK_IN), 
                 .D(XLXN_50), 
                 .Q(XLXN_51));
   AND2  XLXI_17 (.I0(CLK_IN), 
                 .I1(XLXN_32), 
                 .O(XLXN_50));
   AND2  XLXI_22 (.I0(XLXN_58), 
                 .I1(XLXN_57), 
                 .O(XLXN_60));
   FD_1 #( .INIT(1'b0) ) XLXI_24 (.C(XLXN_58), 
                 .D(XLXN_60), 
                 .Q(XLXN_61));
   FD_1 #( .INIT(1'b0) ) XLXI_27 (.C(XLXN_51), 
                 .D(XLXN_16), 
                 .Q(XLXN_58));
   XNOR4  XLXI_30 (.I0(A3_DUMMY), 
                  .I1(A0_DUMMY), 
                  .I2(A1_DUMMY), 
                  .I3(A2_DUMMY), 
                  .O(XLXN_32));
   GND  XLXI_32 (.G(B3));
   XNOR3  XLXI_33 (.I0(B2_DUMMY), 
                  .I1(B1_DUMMY), 
                  .I2(B0_DUMMY), 
                  .O(XLXN_13));
   jkCounter0to9_MUSER_main  XLXI_34 (.CLK_IN(XLXN_58), 
                                     .CLR(CLEAR), 
                                     .A(C0_DUMMY), 
                                     .B(C1_DUMMY), 
                                     .C(C2_DUMMY), 
                                     .D(C3_DUMMY));
   XNOR4  XLXI_37 (.I0(C3_DUMMY), 
                  .I1(C0_DUMMY), 
                  .I2(C1_DUMMY), 
                  .I3(C2_DUMMY), 
                  .O(XLXN_57));
   jkCounter0to5_MUSER_main  XLXI_38 (.CLK_IN(XLXN_61), 
                                     .CLR(CLEAR), 
                                     .A(D0), 
                                     .B(D1), 
                                     .C(D2));
   GND  XLXI_39 (.G(D3));
endmodule
`timescale 1ns / 1ps

module main(CLK, 
            Reset, 
            Start_Stop, 
            common0, 
            common1, 
            common2, 
            common3, 
            SEG_A, 
            SEG_B, 
            SEG_C, 
            SEG_D, 
            SEG_E, 
            SEG_F, 
            SEG_G);

    input CLK;
    input Reset;
   (* CLOCK_DEDICATED_ROUTE = "FALSE" *) 
    input Start_Stop;
   output common0;
   output common1;
   output common2;
   output common3;
   output SEG_A;
   output SEG_B;
   output SEG_C;
   output SEG_D;
   output SEG_E;
   output SEG_F;
   output SEG_G;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_51;
   
   ClockDivider_MUSER_main  XLXI_1 (.CLK_20MHz(CLK), 
                                   .CLK_1Hz(XLXN_11), 
                                   .CLK_100Hz(XLXN_51));
   timer_MUSER_main  XLXI_6 (.CLEAR(XLXN_12), 
                            .CLK_IN(XLXN_8), 
                            .A0(XLXN_16), 
                            .A1(XLXN_17), 
                            .A2(XLXN_18), 
                            .A3(XLXN_19), 
                            .B0(XLXN_20), 
                            .B1(XLXN_21), 
                            .B2(XLXN_22), 
                            .B3(XLXN_23), 
                            .C0(XLXN_24), 
                            .C1(XLXN_25), 
                            .C2(XLXN_26), 
                            .C3(XLXN_27), 
                            .D0(XLXN_28), 
                            .D1(XLXN_29), 
                            .D2(XLXN_30), 
                            .D3(XLXN_31));
   stateToggle_MUSER_main  XLXI_7 (.C_IN(Start_Stop), 
                                  .C_OUT(XLXN_9));
   AND2  XLXI_9 (.I0(XLXN_11), 
                .I1(XLXN_9), 
                .O(XLXN_8));
   AND2  XLXI_13 (.I0(Reset), 
                 .I1(XLXN_13), 
                 .O(XLXN_12));
   INV  XLXI_14 (.I(XLXN_9), 
                .O(XLXN_13));
   MUX16_4_MUSER_main  XLXI_15 (.A0(XLXN_16), 
                               .A1(XLXN_17), 
                               .A2(XLXN_18), 
                               .A3(XLXN_19), 
                               .B0(XLXN_20), 
                               .B1(XLXN_21), 
                               .B2(XLXN_22), 
                               .B3(XLXN_23), 
                               .CLK_IN(XLXN_51), 
                               .C0(XLXN_24), 
                               .C1(XLXN_25), 
                               .C2(XLXN_26), 
                               .C3(XLXN_27), 
                               .D0(XLXN_28), 
                               .D1(XLXN_29), 
                               .D2(XLXN_30), 
                               .D3(XLXN_31), 
                               .Q0(XLXN_33), 
                               .Q1(XLXN_34), 
                               .Q2(XLXN_35), 
                               .Q3(XLXN_36));
   bcd_MUSER_main  XLXI_16 (.In_A(XLXN_33), 
                           .In_B(XLXN_34), 
                           .In_C(XLXN_35), 
                           .In_D(XLXN_36), 
                           .a(SEG_A), 
                           .b(SEG_B), 
                           .c(SEG_C), 
                           .d(SEG_D), 
                           .e(SEG_E), 
                           .f(SEG_F), 
                           .g(SEG_G));
   demux1to4_MUSER_main  XLXI_17 (.C_IN(XLXN_51), 
                                 .OUT0(common0), 
                                 .OUT1(common1), 
                                 .OUT2(common2), 
                                 .OUT3(common3));
endmodule
